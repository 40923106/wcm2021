<h1>About</h1>
<p>This is <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></p>
<p>目前的 cmsimde 在編輯器下方新增一個 csave 按鈕, 意即 collabrative save, 當動態網際管理系統在多人同時維護登入維護網頁內容時, 編輯各頁面時段, 該頁面可能已經改版, 因此使用 csave 按鈕存檔時, 會導入當下最新的該頁面內容, 並試圖與編輯中的頁面內容進行合併.</p>
<p>使用 csave 按鈕存檔無法刪除頁面資料.</p>
<p>使用 Edit All 模式, 無法使用 csave 按鈕（尚未測試).</p>
<h1>每周進度</h1>
<h2>W1 W2</h2>
<p>建立WCM2021的倉儲</p>
<p></p>
<h2>W3</h2>
<p>到 mde tw 的 cmstemplate 的網站中</p>
<p>即可了解到建立倉儲中常見的問題</p>
<p></p>
<h2>W4</h2>
<p><span>學校的課程相關主機為 <a href="https://qry.nfu.edu.tw/">https://qry.nfu.edu.tw/</a></span></p>
<p><span>查詢各班課表用 <a href="https://qry.nfu.edu.tw/class.php">https://qry.nfu.edu.tw/class.php</a></span></p>
<p>再使用spring v2 ipv6 去拉出四設計一甲班及課表</p>
<p></p>
<h2>W5</h2>
<p>學習如何設定用ssh對github連線</p>
<p>雖然在大一上學期的cp2020中已經講解過ssh(如下面的網址)</p>
<p><a href="http://mde.tw/cp2020/content/SSH.html">http://mde.tw/cp2020/content/SSH.html</a></p>
<p><span>也說過如何設置ssh對github連線，</span>不過因不熟悉如何操作，所以在本周重新再設定一次(<span>如下面的網址</span>)</p>
<p><a href="http://mde.tw/cd2021/content/SSH%20%E4%BA%86%E6%B2%92.html">http://mde.tw/cd2021/content/SSH%20%E4%BA%86%E6%B2%92.html</a></p>
<p>下列為老師所拍攝的教學影片</p>
<p></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/l5vJYuwb2uU" title="YouTube video player" width="560"></iframe></p>
<p>4/1 在heroku上創建一個帳號，去a.kmol.info.88，下載heroku.7z至隨身系統中，如下面網址操作</p>
<p><a href="http://mde.tw/lab/content/Heroku.html">http://mde.tw/lab/content/Heroku.html</a></p>
<p></p>
<h2>W6W7</h2>
<p>操作heroku使其跟github同步</p>
<h2>W8</h2>
<p>開始製作分組專題</p>
<p>先了解Topic0 <a href="http://mde.tw/wcm2021/content/Topic%200.html">http://mde.tw/wcm2021/content/Topic%200.html</a> 中怎麼從學校教務主機拉出我們班四設計一甲的課表</p>
<p>也拉出實驗室排時間的課表 <a href="http://mde.tw/wcm2021/content/W7.html">http://mde.tw/wcm2021/content/W7.html</a> 如此網址所述。</p>
<h2>W9</h2>
<p>期中分組報告</p>
<h2>W10</h2>
<p>設定ssh </p>
<h2>W11 W12</h2>
<p>下載robodk這個程式</p>
<h2>W13</h2>
<p>開始使用 Google Meet 遠距上課</p>
<h2>W14</h2>
<p>操作robodk這個程式，並看看能不能正常運作</p>
<h2>W15</h2>
<p>小組錄製討論畫面</p>
<p>並放到分組網站上</p>
<h2>W16</h2>
<p>操作fossil，建立靜態網頁，使其與github同步</p>
<p></p>
<h1>網路環境</h1>
<p><span>之前在學校都是利用學校網路進行更新，</span>因為遠距教學，所以需要改網路才能夠push</p>
<p></p>
<p></p>
<p>因為是使自己的網路，所以需要把proxy 的選項改為None</p>
<p></p>
<p><img alt="" height="542" src="/images/螢幕擷取畫面 (79).png" width="597"/></p>
<p></p>
<h1>Heroku 網站</h1>
<p><span>步驟1:</span><span> </span>(<span>建立 Heroku 帳號</span>) 進入<span> </span><a href="https://heroku.com/">https://heroku.com</a>, 利用學校的 @gm 註冊一個 Heroku 帳號</p>
<p><span>步驟2:</span><span> </span>(<span>建立 Heroku app</span>) 登入 Heroku 後，先以 s + 學號 建立第一個 app</p>
<p><span>步驟三:</span><span> </span>(下載 Heroku CLI) 從<span> </span><a href="http://a.kmol.info:88/heroku.7z">http://a.kmol.info:88/heroku.7z</a><span> </span>下載 Heroku cli 程式檔案，解開至隨身碟 Y: 所在位置</p>
<p><span>步驟四:</span><span> </span>(<span>修改命令搜尋路徑</span>) 修改隨身系統的啟動批次檔案, 讓 Windows 的命令視窗中可以執行 heroku.exe，重新啟動已經納入可執行 heroku.exe 的隨身碟 start_ipv6.bat 或 start_ipv4.bat中</p>
<p><span>步驟五:</span><span> </span>(<span>測試 heroku 執行</span>) 重新打開start_ipv6.bat，在命令列中執行輸入 heroku version，如果有回應表示有設定成功</p>
<p><img alt="" height="633" src="/images/螢幕擷取畫面 (80).png" width="1220"/></p>
<p><span>步驟六:</span><span> </span>(<span>設定 heroku 代理主機</span>) 在 y:\home_ipv6 下的 .giconfig 中， 以 git config --global http.proxy "http://your_proxy:port" 進行設定.</p>
<p>在 start_ipv6.bat 中加入:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_284040">
<table border="0" cellpadding="0" cellspacing="0" style="width: 380.663px;">
<tbody>
<tr>
<td class="gutter" style="width: 7px;">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code" style="width: 365.663px;">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">REM </code><code class="js keyword">for</code> <code class="js plain">heroku login</code></div>
<div class="line number2 index1 alt1"><code class="js plain">REM set HTTP_PROXY=http:</code><code class="js comments">//[2001:288:6004:17::53]:3128</code></div>
<div class="line number3 index2 alt2"><code class="js plain">REM set HTTPS_PROXY=http:</code><code class="js comments">//[2001:288:6004:17::53]:3128</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p><br/>因為是用自己得網路，所以要在前面打REM</p>
<p></p>
<p><img alt="" height="915" src="/images/81.png" width="693"/></p>
<p></p>
</div>
</div>
<p><span>步驟七:</span><span> </span>(<span>設定同步倉儲</span>) 針對利用 Heroku 同步 Github Pages 上的網站內容, 只需要透過 git remote add (Heroku 指令為 heroku git:remote -a heroku_倉儲_名稱, 之後只要在 heroku login 狀態下, 可以直接利用 git push) 在近端設定一個連線到 Heroku 倉儲的代號, 就能在每次更新 Github Pages 倉儲後, 再將內容同步至 Heroku. </p>
<p></p>
<p><span>步驟八:</span><span> </span>(<span>以 git 進行提交推送</span>) 利用 heroku git:remote -a 設定的同步倉儲其推送名稱內定為 "heroku", 使用者只要使用 git push heroku 就可以將改版內容推送到對應的 Heroku app 倉儲.</p>
<p></p>
<h1>網路直播</h1>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>